/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 14170 $ of $
 *
 * $Id:$
 */
#ifndef DESSERTSYSIFTABLE_H
#define DESSERTSYSIFTABLE_H

#ifdef __cplusplus
extern          "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

    /*
     * other required module components 
     */
    /* *INDENT-OFF*  */
config_add_mib(DESSERT-MIB)
config_require(DESSERT-MIB/dessertSysifTable/dessertSysifTable_interface)
config_require(DESSERT-MIB/dessertSysifTable/dessertSysifTable_data_access)
config_require(DESSERT-MIB/dessertSysifTable/dessertSysifTable_data_get)
config_require(DESSERT-MIB/dessertSysifTable/dessertSysifTable_data_set)
    /* *INDENT-ON*  */

    /*
     * OID and column number definitions for dessertSysifTable 
     */
#include "dessertSysifTable_oids.h"

    /*
     * enum definions 
     */
#include "dessertSysifTable_enums.h"



/*
     *********************************************************************
     * function declarations
     */
    void            init_dessertSysifTable(void);
    void            shutdown_dessertSysifTable(void);

    /*
     *********************************************************************
     * Table declarations
     */
/**********************************************************************
 **********************************************************************
 ***
 *** Table dessertSysifTable
 ***
 **********************************************************************
 **********************************************************************/
    /*
     * DESSERT-MIB::dessertSysifTable is subid 7 of dessertObjects.
     * Its status is Current.
     * OID: .1.3.6.1.4.1.18898.0.19.10.1.1.7, length: 12
     */
    /*
     *********************************************************************
     * When you register your mib, you get to provide a generic
     * pointer that will be passed back to you for most of the
     * functions calls.
     *
     * TODO:100:r: Review all context structures
     */
    /*
     * TODO:101:o: |-> Review dessertSysifTable registration context.
     */
    typedef netsnmp_data_list dessertSysifTable_registration;

/**********************************************************************/
    /*
     * TODO:110:r: |-> Review dessertSysifTable data context structure.
     * This structure is used to represent the data for dessertSysifTable.
     */
    /*
     * This structure contains storage for all the columns defined in the
     * dessertSysifTable.
     */
    typedef struct dessertSysifTable_data_s {

        /*
         * sysifName(2)/DisplayString/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
        char            sysifName[255];
        size_t          sysifName_len;  /* # of char elements, not bytes */

        /*
         * sysifMacAddress(3)/MacAddress/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
        char            sysifMacAddress[6];
        size_t          sysifMacAddress_len;    /* # of char elements, not bytes */

        /*
         * sysifInPkts(4)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
        U64             sysifInPkts;

        /*
         * sysifOutPkts(5)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
        U64             sysifOutPkts;

        /*
         * sysifInOctets(6)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
        U64             sysifInOctets;

        /*
         * sysifOutOctets(7)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
        U64             sysifOutOctets;

    } dessertSysifTable_data;


    /*
     * TODO:120:r: |-> Review dessertSysifTable mib index.
     * This structure is used to represent the index for dessertSysifTable.
     */
    typedef struct dessertSysifTable_mib_index_s {

        /*
         * sysifIndex(1)///()//L/a/w/e/r/d/h
         */
        long sysifIndex;


    } dessertSysifTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review dessertSysifTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     */
#define MAX_dessertSysifTable_IDX_LEN     1


    /*
     *********************************************************************
     * TODO:130:o: |-> Review dessertSysifTable Row request (rowreq) context.
     * When your functions are called, you will be passed a
     * dessertSysifTable_rowreq_ctx pointer.
     */
    typedef struct dessertSysifTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
        netsnmp_index   oid_idx;
        oid             oid_tmp[MAX_dessertSysifTable_IDX_LEN];

        dessertSysifTable_mib_index tbl_idx;

        dessertSysifTable_data data;

        /*
         * flags per row. Currently, the first (lower) 8 bits are reserved
         * for the user. See mfd.h for other flags.
         */
        u_int           rowreq_flags;

        /*
         * TODO:131:o: |   |-> Add useful data to dessertSysifTable rowreq context.
         */

        /*
         * storage for future expansion
         */
        netsnmp_data_list *dessertSysifTable_data_list;

    } dessertSysifTable_rowreq_ctx;

    typedef struct dessertSysifTable_ref_rowreq_ctx_s {
        dessertSysifTable_rowreq_ctx *rowreq_ctx;
    } dessertSysifTable_ref_rowreq_ctx;

    /*
     *********************************************************************
     * function prototypes
     */
    int            
        dessertSysifTable_pre_request(dessertSysifTable_registration *
                                      user_context);
    int            
        dessertSysifTable_post_request(dessertSysifTable_registration *
                                       user_context, int rc);

    int            
        dessertSysifTable_rowreq_ctx_init(dessertSysifTable_rowreq_ctx *
                                          rowreq_ctx, void *user_init_ctx);
    void           
        dessertSysifTable_rowreq_ctx_cleanup(dessertSysifTable_rowreq_ctx *
                                             rowreq_ctx);


    dessertSysifTable_rowreq_ctx
        *dessertSysifTable_row_find_by_mib_index
        (dessertSysifTable_mib_index * mib_idx);

    extern oid      dessertSysifTable_oid[];
    extern int      dessertSysifTable_oid_size;

#include "dessertSysifTable_interface.h"
#include "dessertSysifTable_data_access.h"
#include "dessertSysifTable_data_get.h"
#include "dessertSysifTable_data_set.h"

    /*
     * DUMMY markers, ignore
     *
     * TODO:099:x: *************************************************************
     * TODO:199:x: *************************************************************
     * TODO:299:x: *************************************************************
     * TODO:399:x: *************************************************************
     * TODO:499:x: *************************************************************
     */

#ifdef __cplusplus
}
#endif
#endif                          /* DESSERTSYSIFTABLE_H */
/** @} */
