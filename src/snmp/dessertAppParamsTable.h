/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 14170 $ of $
 *
 * $Id:$
 */
#ifndef DESSERTAPPPARAMSTABLE_H
#define DESSERTAPPPARAMSTABLE_H

#ifdef __cplusplus
extern          "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

    /*
     * other required module components 
     */
    /* *INDENT-OFF*  */
config_add_mib(DESSERT-MIB)
config_require(DESSERT-MIB/dessertAppParamsTable/dessertAppParamsTable_interface)
config_require(DESSERT-MIB/dessertAppParamsTable/dessertAppParamsTable_data_access)
config_require(DESSERT-MIB/dessertAppParamsTable/dessertAppParamsTable_data_get)
config_require(DESSERT-MIB/dessertAppParamsTable/dessertAppParamsTable_data_set)
    /* *INDENT-ON*  */

    /*
     * OID and column number definitions for dessertAppParamsTable 
     */
#include "dessertAppParamsTable_oids.h"

    /*
     * enum definions 
     */
#include "dessertAppParamsTable_enums.h"

    /*
     *********************************************************************
     * function declarations
     */
    void            init_dessertAppParamsTable(void);
    void            shutdown_dessertAppParamsTable(void);

    /*
     *********************************************************************
     * Table declarations
     */
/**********************************************************************
 **********************************************************************
 ***
 *** Table dessertAppParamsTable
 ***
 **********************************************************************
 **********************************************************************/
    /*
     * DESSERT-MIB::dessertAppParamsTable is subid 9 of dessertObjects.
     * Its status is Current.
     * OID: .1.3.6.1.4.1.18898.0.19.10.1.1.9, length: 13
     */
    /*
     *********************************************************************
     * When you register your mib, you get to provide a generic
     * pointer that will be passed back to you for most of the
     * functions calls.
     *
     * TODO:100:r: Review all context structures
     */
    /*
     * TODO:101:o: |-> Review dessertAppParamsTable registration context.
     */
    typedef netsnmp_data_list dessertAppParamsTable_registration;

/**********************************************************************/
    /*
     * TODO:110:r: |-> Review dessertAppParamsTable data context structure.
     * This structure is used to represent the data for dessertAppParamsTable.
     */
    /*
     * This structure contains storage for all the columns defined in the
     * dessertAppParamsTable.
     */
    typedef struct dessertAppParamsTable_data_s {

        /*
         * appParamsName(2)/DisplayString/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
        char            appParamsName[255];
        size_t          appParamsName_len;      /* # of char elements, not bytes */

        /*
         * appParamsDesc(3)/DisplayString/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
        char            appParamsDesc[255];
        size_t          appParamsDesc_len;      /* # of char elements, not bytes */

        /*
         * appParamsValueType(4)/DessertAppValueType/ASN_INTEGER/long(u_long)//l/A/w/E/r/d/h
         */
        u_long          appParamsValueType;

        /*
         * appParamsTruthValue(5)/TruthValue/ASN_INTEGER/long(u_long)//l/A/W/E/r/d/h
         */
        u_long          appParamsTruthValue;

        /*
         * appParamsInteger32(6)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
        long            appParamsInteger32;

        /*
         * appParamsUnsigned32(7)/UNSIGNED32/ASN_UNSIGNED/u_long(u_long)//l/A/W/e/r/d/h
         */
        u_long          appParamsUnsigned32;

        /*
         * appParamsOctetString(9)/DessertApplicationOctetString/ASN_OCTET_STR/char(char)//L/A/W/e/R/d/H
         */
        char            appParamsOctetString[1024];
        size_t          appParamsOctetString_len;       /* # of char elements, not bytes */

    } dessertAppParamsTable_data;


    /*
     *********************************************************************
     * TODO:115:o: |-> Review dessertAppParamsTable undo context.
     * We're just going to use the same data structure for our
     * undo_context. If you want to do something more efficent,
     * define your typedef here.
     */
    typedef dessertAppParamsTable_data dessertAppParamsTable_undo_data;

    /*
     * TODO:120:r: |-> Review dessertAppParamsTable mib index.
     * This structure is used to represent the index for dessertAppParamsTable.
     */
    typedef struct dessertAppParamsTable_mib_index_s {

        /*
         * appParamsIndex(1)/DessertAppParamsIndex/ASN_INTEGER/long(long)//l/a/w/e/R/d/H
         */
        long            appParamsIndex;


    } dessertAppParamsTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review dessertAppParamsTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     */
#define MAX_dessertAppParamsTable_IDX_LEN     1


    /*
     *********************************************************************
     * TODO:130:o: |-> Review dessertAppParamsTable Row request (rowreq) context.
     * When your functions are called, you will be passed a
     * dessertAppParamsTable_rowreq_ctx pointer.
     */
    typedef struct dessertAppParamsTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
        netsnmp_index   oid_idx;
        oid             oid_tmp[MAX_dessertAppParamsTable_IDX_LEN];

        dessertAppParamsTable_mib_index tbl_idx;

        dessertAppParamsTable_data data;
        unsigned int    column_exists_flags;    /* flags for existence */
        dessertAppParamsTable_undo_data *undo;
        unsigned int    column_set_flags;       /* flags for set columns */


        /*
         * flags per row. Currently, the first (lower) 8 bits are reserved
         * for the user. See mfd.h for other flags.
         */
        u_int           rowreq_flags;

        /*
         * TODO:131:o: |   |-> Add useful data to dessertAppParamsTable rowreq context.
         */

        /*
         * storage for future expansion
         */
        netsnmp_data_list *dessertAppParamsTable_data_list;

    } dessertAppParamsTable_rowreq_ctx;

    typedef struct dessertAppParamsTable_ref_rowreq_ctx_s {
        dessertAppParamsTable_rowreq_ctx *rowreq_ctx;
    } dessertAppParamsTable_ref_rowreq_ctx;

    /*
     *********************************************************************
     * function prototypes
     */
    int            
        dessertAppParamsTable_pre_request
        (dessertAppParamsTable_registration * user_context);
    int            
        dessertAppParamsTable_post_request
        (dessertAppParamsTable_registration * user_context, int rc);

    int            
        dessertAppParamsTable_rowreq_ctx_init
        (dessertAppParamsTable_rowreq_ctx * rowreq_ctx,
         void *user_init_ctx);
    void           
        dessertAppParamsTable_rowreq_ctx_cleanup
        (dessertAppParamsTable_rowreq_ctx * rowreq_ctx);

    int            
        dessertAppParamsTable_commit(dessertAppParamsTable_rowreq_ctx *
                                     rowreq_ctx);

    dessertAppParamsTable_rowreq_ctx
        *dessertAppParamsTable_row_find_by_mib_index
        (dessertAppParamsTable_mib_index * mib_idx);

    extern oid      dessertAppParamsTable_oid[];
    extern int      dessertAppParamsTable_oid_size;


#include "dessertAppParamsTable_interface.h"
#include "dessertAppParamsTable_data_access.h"
#include "dessertAppParamsTable_data_get.h"
#include "dessertAppParamsTable_data_set.h"

    /*
     * DUMMY markers, ignore
     *
     * TODO:099:x: *************************************************************
     * TODO:199:x: *************************************************************
     * TODO:299:x: *************************************************************
     * TODO:399:x: *************************************************************
     * TODO:499:x: *************************************************************
     */

#ifdef __cplusplus
}
#endif
#endif                          /* DESSERTAPPPARAMSTABLE_H */
/** @} */
